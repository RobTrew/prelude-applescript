{
  "title": "replicate",
  "cells": [
    {
      "type": "code",
      "language": "applescript",
      "data": "-- Egyptian multiplication - progressively doubling a list, appending\n-- stages of doubling to an accumulator where needed for binary \n-- assembly of a target length"
    },
    {
      "type": "code",
      "language": "applescript",
      "data": "-- replicate :: Int -> a -> [a]\ron replicate(n, a)\r\tset out to {}\r\tif n < 1 then return out\r\tset dbl to {a}\r\t\r\trepeat while (n > 1)\r\t\tif (n mod 2) > 0 then set out to out & dbl\r\t\tset n to (n div 2)\r\t\tset dbl to (dbl & dbl)\r\tend repeat\r\treturn out & dbl\rend replicate"
    }
  ]
}