{
  "title": "replicate",
  "cells": [
    {
      "type": "code",
      "language": "applescript",
      "data": "-- Egyptian multiplication - progressively doubling a list, appending\n-- stages of doubling to an accumulator where needed for binary \n-- assembly of a target length"
    },
    {
      "type": "code",
      "language": "applescript",
      "data": "-- replicate :: Int -> a -> [a]\non replicate(n, a)\n    set out to {}\n    if 1 > n then return out\n    set dbl to {a}\n    \n    repeat while (1 < n)\n        if 0 < (n mod 2) then set out to out & dbl\n        set n to (n div 2)\n        set dbl to (dbl & dbl)\n    end repeat\n    return out & dbl\nend replicate"
    }
  ]
}