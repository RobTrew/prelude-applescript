{
  "title": "ap (<*>)",
  "cells": [
    {
      "type": "code",
      "language": "applescript",
      "data": "-- Applies wrapped functions to wrapped values, \n-- for example applying a list of functions to a list of values\n-- or applying Just(f) to Just(x), Right(f) to Right(x), etc"
    },
    {
      "type": "code",
      "language": "applescript",
      "data": "-- ap (<*>) :: Monad m => m (a -> b) -> m a -> m b\non ap(mf, mx)\n    if class of mx is list then\n        apList(mf, mx)\n    else if class of mf is record then\n        set ks to keys(mf)\n        if ks contains \"type\" then\n            set t to type of mx\n            if t = \"Either\" then\n                apEither(mf, mx)\n            else if t = \"Maybe\" then\n                apMaybe(mf, mx)\n            else if t = \"Tuple\" then\n                apTuple(mf, mx)\n            else if t = \"Node\" then\n                apTree(mf, mx)\n            else\n                missing value\n            end if\n        else\n            missing value\n        end if\n    end if\nend ap"
    }
  ]
}