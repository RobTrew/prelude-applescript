{
  "title": "zipWithM",
  "cells": [
    {
      "type": "code",
      "language": "applescript",
      "data": "-- zipWithM :: Applicative m => (a -> b -> m c) -> [a] -> [b] -> m [c]\non zipWithM(fm, xs, ys)\n    -- A functor of the type to which fm lifts its result.\n    -- For example, Nothing/Left if any of the zip applications failed,\n    -- or Just/Right a list of the results, when all succeeded.\n    traverseList(my |id|, zipWith(fm, xs, ys))\nend zipWithM"
    }
  ]
}