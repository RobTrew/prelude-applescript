{
  "title": "splitBy",
  "cells": [
    {
      "type": "code",
      "language": "applescript",
      "data": "-- splitBy :: (a -> a -> Bool) -> [a] -> [[a]]\n-- splitBy :: (String -> String -> Bool) -> String -> [String]\non splitBy(p, xs)\n    if 2 > length of xs then\n        {xs}\n    else\n        script pairMatch\n            property mp : mReturn(p)'s |λ|\n            on |λ|(a, b)\n                {mp(a, b), a, b}\n            end |λ|\n        end script\n        \n        script addOrSplit\n            on |λ|(a, blnXY)\n                set {bln, x, y} to blnXY\n                if bln then\n                    {item 1 of a & {item 2 of a}, {y}}\n                else\n                    {item 1 of a, (item 2 of a) & y}\n                end if\n            end |λ|\n        end script\n        set {a, r} to foldl(addOrSplit, ¬\n            {{}, {item 1 of xs}}, ¬\n            zipWith(pairMatch, xs, rest of xs))\n        \n        if list is class of xs then\n            a & {r}\n        else\n            map(my concat, a & {r})\n        end if\n    end if\nend splitBy"
    }
  ]
}